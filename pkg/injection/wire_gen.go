// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injection

import (
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"gorm.io/gorm"
	"matchlove-services/internal/handler"
	"matchlove-services/internal/repository"
	"matchlove-services/internal/router"
	"matchlove-services/internal/service"
)

// Injectors from wire.go:

func IntializeHandler(db *gorm.DB) *router.Handler {
	validate := validator.New()
	iAccountRepository := repository.NewAccountRepository(db)
	iUserRepository := repository.NewUserRepository(db, iAccountRepository)
	iUserService := service.NewUserService(iUserRepository)
	iUserHandler := handler.NewUserHandler(validate, iUserService)
	iAuthRepository := repository.NewAuthRepository(db)
	iAuthService := service.NewAuthService(iAuthRepository, iAccountRepository)
	iAuthHandler := handler.NewAuthHandler(validate, iAuthService)
	routerHandler := &router.Handler{
		UserHandler: iUserHandler,
		AuthHandler: iAuthHandler,
	}
	return routerHandler
}

// wire.go:

var (
	reportRepositorySet = wire.NewSet(repository.NewAccountRepository, repository.NewUserRepository, repository.NewAuthRepository)

	serviceSet = wire.NewSet(service.NewUserService, service.NewAuthService)

	handlerSet = wire.NewSet(handler.NewAuthHandler, handler.NewUserHandler)
)
